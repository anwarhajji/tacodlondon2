---
import NavMobile from "@components/navigation/NavMobile.vue";
import { Icon } from "astro-icon";

import ColorSwitch from "@components/common/ColorSwitch.vue";
import { t } from "@util/translate";

const { menu, title, social } = Astro.props;
const currentPath = Astro.url.pathname.split("/")[1];

const isActive = (href) => {
  if (currentPath === "" && href == "/") return true;
  if (currentPath !== "" && href.startsWith(`/${currentPath}`)) return true;
};
---

<header class="surface-menu nav sticky top-0 z-50" transition:name="nav">
  <nav class="container-xl flex flex-nowrap items-stretch gap-6">
    <a
      href="/"
      aria-label={title}
      class="grid place-items-center py-3 font-lovelo"
      ><h1 style="font-family: LOVELO;" class="  text-2xl md:text-left lg:text-2xl -text ">
        <span >FRENCH</span>  <span >TACOS</span>
      </h1>
     <div class="center-container">
   
      <span class="character" style="--delay: 5.1s;">  -   </span>
      <span class="character" style="--delay: 5.1s;">L</span>
      <span class="character" style="--delay: 3.2s;">0</span>
      <span class="character" style="--delay: 2.3s;">N</span>
      <span class="character" style="--delay: 6.4s;">D</span>
      <span class="character" style="--delay: 4.5s;">O</span>
      <span class="character" style="--delay: 8.5s;">N</span>
      <span class="character" style="--delay: 5.1s;">  -   </span>
    </div>



      </a
    >
    {
      menu && (
        <ul class="nav-underline nav-links relative hidden flex-nowrap pl-4 uppercase tracking-wide before:absolute before:inset-y-4 before:left-0 before:border-l-2 before:border-primary before:border-opacity-50 md:flex ">
          {menu.map((link) => (
            <li class={`${isActive(link.href) ? "active font-semibold" : ""}`}>
              <a href={link.href} class={`block py-3`}>
                {link.label}
              </a>
            </li>
          ))}
        </ul>
      )
    }

    {
      (
        <ul class="nav-underline relative -mr-4  ml-auto flex flex-nowrap justify-end pl-4 uppercase md:mr-0">
          <li>
            
          </li>
          
          {social &&
            social.slice(0, 3).map((link) => (
              <li class="hidden md:block">
                <a
                  href={link.href}
                  class="grid h-full place-items-center"
                  target="_blank"
                  aria-label={link.label}
                >
                  <Icon name={link.icon} class="w-6" />
                </a>
              </li>
            ))}

          <li>
            <ColorSwitch client:idle />
          </li>

          <li class="md:hidden">
            <NavMobile
              client:idle
              translations={{ menu: t("menu"), close: t("close") }}
            >
              <Icon name="menu-solid" class="h-10 w-10" slot="menu" />

              <Icon name="close" class="h-10 w-10" slot="close" />
              <Icon name="logo" class="w-full" slot="logo" />
              <ul
                class="mobile-links nav-links mt-3 w-full text-center"
                slot="links"
              >
                {menu.map((link, index) => (
                  <li
                    style={`--animation-delay: ${(index + 1) * 100}ms`}
                    class={`title-md inner w-full border-2 border-transparent transition-all duration-1000 hover:border-current  ${
                      isActive(link.href)
                        ? "active font-semibold text-primary"
                        : ""
                    }`}
                  >
                    <a href={link.href} class={`block py-3`}>
                      {link.label}
                    </a>
                  </li>
                ))}
              </ul>

              <ul
                class="relatives flex w-full flex-wrap justify-center gap-2 py-4"
                slot="social"
              >
                {social.map((link, index) => (
                  <li
                    class="inner"
                    style={`--animation-delay: ${(index + 1) * 100}ms`}
                  >
                    <a
                      href={link.href}
                      class="grid h-full place-items-center "
                      target="_blank"
                      aria-label={link.label}
                    >
                      <Icon name={link.icon} class="h-8 w-8" />
                    </a>
                  </li>
                ))}
              </ul>
            </NavMobile>
          </li>
        </ul>
      )
    }
  </nav>
</header>
<style>
  .nav {
    @apply transition-transform duration-500;
    ul {
      --_gap: 1rem;
    }
    .nav-underline li:not(ul li ul li) {
      @apply relative overflow-hidden;
      padding: calc(var(--_gap) / 2);
      min-inline-size: 1.3rem;

      &::after {
        @apply absolute rounded-full bg-primary;
        content: "";
        inset-inline: 0;
        inset-block-end: 0;
        block-size: 5px;

        translate: var(--_translate, 0);
        scale: var(--_scale, 0) 1;
        transition:
          scale 100ms var(--_scale-delay, 0ms),
          translate 200ms,
          color 200ms;
      }
      &:hover ~ li {
        --_translate: -100%;
        --_scale-delay: 200ms;
      }
    }
    &:hover li {
      --_translate: 100%;
      --_scale-delay: 200ms;
    }

    li:hover {
      --_scale: 1;
      --_translate: 0;
      --_scale-delay: 0ms;
      @apply text-primary;
    }
  }
</style>



<style>
  .center-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 4vh; /* Adjust the height as needed */
  }
  
  .character-container {
    display: flex;
    border: 1px solid #c90ec3; /* Border style */
    padding: 3px; /* Adjust padding to control the space between characters and border */
  }
  .character:nth-child(1) { animation-delay: var(--delay); }
  .character:nth-child(2) { animation-delay: calc(var(--delay) + 1.1s); }
  .character:nth-child(3) { animation-delay: calc(var(--delay) + 2.2s); }
  .character:nth-child(4) { animation-delay: calc(var(--delay) + 20.3s); }
  .character:nth-child(5) { animation-delay: calc(var(--delay) + 10.4s); }
  .character {
    display: inline-block;
    padding: 3px;
    margin: 4px;
    color: #ff50ee;
    font-weight: bold;
    text-shadow: 0 0 12px rgba(255, 254, 255, 0.7); /* -style text shadow */
    animation: blink 3s infinite alternate; /* Blink animation */
  }
  
  @keyframes blink {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0;
    }
  }
  
  
   </style>

   
<style>
  @keyframes flicker {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }
  
  .-text {
     font-size: 1.5rem; /* Adjust the font size as needed */
    font-weight: bold; /* Adjust the font weight as needed */
    background-image: linear-gradient(to right, #3498db, #00f7ff); /* Adjust the gradient colors */
    color: transparent;
    -webkit-background-clip: text;
    background-clip: text;
    animation: flicker 1s infinite; /* Adjust the duration as needed */
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.7); /* Add a subtle text*/
  }
  
  
  
   </style>